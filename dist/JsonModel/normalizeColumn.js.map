{"version":3,"sources":["../../src/JsonModel/normalizeColumn.js"],"names":["normalizeColumn","col","name","quoted","sql","quoteId","type","real","falsyBool","get","path","parts","split","index","ignoreNull","unique","TypeError","autoIncrement","slugValue","value","o","idCol","default","prev","r","call","v","required","Error","undefined","parse","stringify"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAGA;AACO,MAAMA,eAAe,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC7CD,EAAAA,GAAG,CAACC,IAAJ,GAAWA,IAAX;AACAD,EAAAA,GAAG,CAACE,MAAJ,GAAaC,QAAIC,OAAJ,CAAYH,IAAZ,CAAb;AACA,MAAID,GAAG,CAACK,IAAR,EAAcL,GAAG,CAACM,IAAJ,GAAW,IAAX,CAAd,KACK,IAAIN,GAAG,CAACM,IAAR,EAAcN,GAAG,CAACK,IAAJ,GAAWL,GAAG,CAACO,SAAJ,GAAgB,SAAhB,GAA4B,MAAvC;AACnB,MAAIP,GAAG,CAACQ,GAAJ,IAAW,IAAf,EAAqBR,GAAG,CAACQ,GAAJ,GAAU,CAAC,CAACR,GAAG,CAACM,IAAhB;AACrB,MAAI,CAACN,GAAG,CAACS,IAAL,IAAaR,IAAI,KAAK,MAA1B,EAAkCD,GAAG,CAACS,IAAJ,GAAWR,IAAX;AAClCD,EAAAA,GAAG,CAACU,KAAJ,GAAYV,GAAG,CAACS,IAAJ,KAAa,EAAb,GAAkB,EAAlB,GAAuBT,GAAG,CAACS,IAAJ,CAASE,KAAT,CAAe,GAAf,CAAnC;AACA,MAAIX,GAAG,CAACY,KAAJ,KAAc,KAAlB,EAAyBZ,GAAG,CAACa,UAAJ,GAAiB,KAAjB;AACzB,MAAIb,GAAG,CAACY,KAAJ,KAAc,QAAlB,EAA4BZ,GAAG,CAACa,UAAJ,GAAiB,IAAjB;;AAC5B,MAAIb,GAAG,CAACc,MAAR,EAAgB;AACf,QAAI,CAACd,GAAG,CAACY,KAAT,EAAgB,MAAM,IAAIG,SAAJ,CAAe,GAAEd,IAAK,yBAAtB,CAAN;AAChB,GAFD,MAEO,IAAID,GAAG,CAACa,UAAJ,IAAkB,IAAtB,EAA4B;AAClCb,IAAAA,GAAG,CAACa,UAAJ,GAAiB,IAAjB;AACA;;AACD,MAAIb,GAAG,CAACgB,aAAJ,IAAqBhB,GAAG,CAACK,IAAJ,KAAa,SAAtC,EACC,MAAM,IAAIU,SAAJ,CAAe,GAAEd,IAAK,0CAAtB,CAAN;;AACD,MAAID,GAAG,CAACiB,SAAR,EAAmB;AAClB,QAAIjB,GAAG,CAACkB,KAAR,EACC,MAAM,IAAIH,SAAJ,CAAe,GAAEd,IAAK,6CAAtB,CAAN;AACD,QAAI,CAACD,GAAG,CAACY,KAAT,EAAgB,MAAM,IAAIG,SAAJ,CAAe,GAAEd,IAAK,4BAAtB,CAAN;;AAChBD,IAAAA,GAAG,CAACkB,KAAJ,GAAY,gBAAeC,CAAf,EAAkB;AAC7B,UAAIA,CAAC,CAAClB,IAAD,CAAD,IAAW,IAAf,EAAqB,OAAOkB,CAAC,CAAClB,IAAD,CAAR;AACrB,aAAO,2BAAa,IAAb,GAAmB,MAAMD,GAAG,CAACiB,SAAJ,CAAcE,CAAd,CAAzB,GAA2ClB,IAA3C,EAAiDkB,CAAC,CAAC,KAAKC,KAAN,CAAlD,CAAP;AACA,KAHD;AAIA;;AACD,MAAIpB,GAAG,CAACqB,OAAJ,IAAe,IAAnB,EAAyB;AACxBrB,IAAAA,GAAG,CAACa,UAAJ,GAAiB,KAAjB;AACA,UAAMS,IAAI,GAAGtB,GAAG,CAACkB,KAAjB;;AACA,QAAII,IAAJ,EAAU;AACTtB,MAAAA,GAAG,CAACkB,KAAJ,GAAY,gBAAeC,CAAf,EAAkB;AAC7B,cAAMI,CAAC,GAAG,MAAMD,IAAI,CAACE,IAAL,CAAU,IAAV,EAAgBL,CAAhB,CAAhB;AACA,eAAOI,CAAC,IAAI,IAAL,GAAYvB,GAAG,CAACqB,OAAhB,GAA0BE,CAAjC;AACA,OAHD;AAIA,KALD,MAKO,IAAIvB,GAAG,CAACG,GAAR,EAAa;AACnBH,MAAAA,GAAG,CAACG,GAAJ,GAAW,UAASH,GAAG,CAACG,GAAI,IAAG,kBAASH,GAAG,CAACqB,OAAb,CAAsB,GAArD;AACA,KAFM,MAEA;AACNrB,MAAAA,GAAG,CAACkB,KAAJ,GAAYC,CAAC,IAAI;AAChB,cAAMM,CAAC,GAAG,mBAAIN,CAAJ,EAAOnB,GAAG,CAACS,IAAX,CAAV;AACA,eAAOgB,CAAC,IAAI,IAAL,GAAYzB,GAAG,CAACqB,OAAhB,GAA0BI,CAAjC;AACA,OAHD;AAIA;AACD;;AACD,MAAIzB,GAAG,CAAC0B,QAAR,EAAkB;AACjB1B,IAAAA,GAAG,CAACa,UAAJ,GAAiB,KAAjB;AACA,UAAMS,IAAI,GAAGtB,GAAG,CAACkB,KAAjB;;AACA,QAAII,IAAJ,EAAU;AACTtB,MAAAA,GAAG,CAACkB,KAAJ,GAAY,gBAAeC,CAAf,EAAkB;AAC7B,cAAMI,CAAC,GAAG,MAAMD,IAAI,CAACE,IAAL,CAAU,IAAV,EAAgBL,CAAhB,CAAhB;AACA,YAAII,CAAC,IAAI,IAAT,EAAe,MAAM,IAAII,KAAJ,CAAW,GAAE1B,IAAK,qBAAlB,CAAN;AACf,eAAOsB,CAAP;AACA,OAJD;AAKA,KAND,MAMO;AACNvB,MAAAA,GAAG,CAACkB,KAAJ,GAAYC,CAAC,IAAI;AAChB,cAAMM,CAAC,GAAG,mBAAIN,CAAJ,EAAOnB,GAAG,CAACS,IAAX,CAAV;AACA,YAAIgB,CAAC,IAAI,IAAT,EAAe,MAAM,IAAIE,KAAJ,CAAW,GAAE1B,IAAK,qBAAlB,CAAN;AACf,eAAOwB,CAAP;AACA,OAJD;AAKA;AACD;;AACD,MAAIzB,GAAG,CAACO,SAAR,EAAmB;AAClB,UAAMe,IAAI,GAAGtB,GAAG,CAACkB,KAAjB;;AACA,QAAII,IAAJ,EAAU;AACTtB,MAAAA,GAAG,CAACkB,KAAJ,GAAY,gBAAeC,CAAf,EAAkB;AAC7B,cAAMI,CAAC,GAAG,MAAMD,IAAI,CAACE,IAAL,CAAU,IAAV,EAAgBL,CAAhB,CAAhB;AACA,eAAOI,CAAC,GAAG,IAAH,GAAUK,SAAlB;AACA,OAHD;AAIA,KALD,MAKO;AACN5B,MAAAA,GAAG,CAACkB,KAAJ,GAAYC,CAAC,IAAI;AAChB,cAAMM,CAAC,GAAG,mBAAIN,CAAJ,EAAOnB,GAAG,CAACS,IAAX,CAAV;AACA,eAAOgB,CAAC,GAAG,IAAH,GAAUG,SAAlB;AACA,OAHD;AAIA;;AACD,QAAI5B,GAAG,CAACM,IAAR,EAAc;AACb,UAAIN,GAAG,CAAC6B,KAAR,EAAe,MAAM,IAAId,SAAJ,CAAe,GAAEd,IAAK,8BAAtB,CAAN;;AACfD,MAAAA,GAAG,CAAC6B,KAAJ,GAAYJ,CAAC,IAAKA,CAAC,GAAG,IAAH,GAAUG,SAA7B;AACA;AACD;;AACD,MAAI,CAAC5B,GAAG,CAACM,IAAL,IAAaN,GAAG,CAAC8B,SAArB,EACC,MAAM,IAAIH,KAAJ,CAAW,GAAE1B,IAAK,0CAAlB,CAAN;AACD,MAAI,CAACD,GAAG,CAACQ,GAAL,IAAYR,GAAG,CAAC6B,KAApB,EACC,MAAM,IAAIF,KAAJ,CAAW,GAAE1B,IAAK,0CAAlB,CAAN;AACD,CAlFM","sourcesContent":["import {sql, valToSql} from '../DB'\nimport {uniqueSlugId} from '../lib/slugify'\nimport {get} from 'lodash'\n\n// eslint-disable-next-line complexity\nexport const normalizeColumn = (col, name) => {\n\tcol.name = name\n\tcol.quoted = sql.quoteId(name)\n\tif (col.type) col.real = true\n\telse if (col.real) col.type = col.falsyBool ? 'INTEGER' : 'BLOB'\n\tif (col.get == null) col.get = !!col.real\n\tif (!col.path && name !== 'json') col.path = name\n\tcol.parts = col.path === '' ? [] : col.path.split('.')\n\tif (col.index === 'ALL') col.ignoreNull = false\n\tif (col.index === 'SPARSE') col.ignoreNull = true\n\tif (col.unique) {\n\t\tif (!col.index) throw new TypeError(`${name}: unique requires index`)\n\t} else if (col.ignoreNull == null) {\n\t\tcol.ignoreNull = true\n\t}\n\tif (col.autoIncrement && col.type !== 'INTEGER')\n\t\tthrow new TypeError(`${name}: autoIncrement is only for type INTEGER`)\n\tif (col.slugValue) {\n\t\tif (col.value)\n\t\t\tthrow new TypeError(`${name}: slugValue and value can't both be defined`)\n\t\tif (!col.index) throw new TypeError(`${name}: slugValue requires index`)\n\t\tcol.value = async function(o) {\n\t\t\tif (o[name] != null) return o[name]\n\t\t\treturn uniqueSlugId(this, await col.slugValue(o), name, o[this.idCol])\n\t\t}\n\t}\n\tif (col.default != null) {\n\t\tcol.ignoreNull = false\n\t\tconst prev = col.value\n\t\tif (prev) {\n\t\t\tcol.value = async function(o) {\n\t\t\t\tconst r = await prev.call(this, o)\n\t\t\t\treturn r == null ? col.default : r\n\t\t\t}\n\t\t} else if (col.sql) {\n\t\t\tcol.sql = `ifNull(${col.sql},${valToSql(col.default)})`\n\t\t} else {\n\t\t\tcol.value = o => {\n\t\t\t\tconst v = get(o, col.path)\n\t\t\t\treturn v == null ? col.default : v\n\t\t\t}\n\t\t}\n\t}\n\tif (col.required) {\n\t\tcol.ignoreNull = false\n\t\tconst prev = col.value\n\t\tif (prev) {\n\t\t\tcol.value = async function(o) {\n\t\t\t\tconst r = await prev.call(this, o)\n\t\t\t\tif (r == null) throw new Error(`${name}: value is required`)\n\t\t\t\treturn r\n\t\t\t}\n\t\t} else {\n\t\t\tcol.value = o => {\n\t\t\t\tconst v = get(o, col.path)\n\t\t\t\tif (v == null) throw new Error(`${name}: value is required`)\n\t\t\t\treturn v\n\t\t\t}\n\t\t}\n\t}\n\tif (col.falsyBool) {\n\t\tconst prev = col.value\n\t\tif (prev) {\n\t\t\tcol.value = async function(o) {\n\t\t\t\tconst r = await prev.call(this, o)\n\t\t\t\treturn r ? true : undefined\n\t\t\t}\n\t\t} else {\n\t\t\tcol.value = o => {\n\t\t\t\tconst v = get(o, col.path)\n\t\t\t\treturn v ? true : undefined\n\t\t\t}\n\t\t}\n\t\tif (col.real) {\n\t\t\tif (col.parse) throw new TypeError(`${name}: falsyBool can't have parse`)\n\t\t\tcol.parse = v => (v ? true : undefined)\n\t\t}\n\t}\n\tif (!col.real && col.stringify)\n\t\tthrow new Error(`${name}: stringify only applies to real columns`)\n\tif (!col.get && col.parse)\n\t\tthrow new Error(`${name}: parse only applies to get:true columns`)\n}\n"],"file":"normalizeColumn.js"}