{"version":3,"sources":["../../src/JsonModel/assignJsonParents.js"],"names":["assignJsonParents","columnArr","parents","filter","c","type","get","sort","byPathLengthDesc","col","parent","find","p","path","startsWith","alwaysObject","real","jsonCol","name","jsonPath","slice","length"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,iBAAiB,GAAGC,SAAS,IAAI;AAC7C,QAAMC,OAAO,GAAGD,SAAS,CACvBE,MADc,CACPC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,MAAX,IAAqBD,CAAC,CAACE,GADrB,EAEdC,IAFc,CAETC,+BAFS,CAAhB;;AAGA,OAAK,MAAMC,GAAX,IAAkBR,SAAlB,EAA6B;AAC5B;AACA,UAAMS,MAAM,GAAGR,OAAO,CAACS,IAAR,CACdC,CAAC,IAAI,CAACA,CAAC,CAACC,IAAH,IAAWJ,GAAG,CAACI,IAAJ,CAASC,UAAT,CAAoBF,CAAC,CAACC,IAAF,GAAS,GAA7B,CADF,CAAf;AAGA,QAAIH,MAAM,CAACK,YAAP,IAAuB,IAA3B,EAAiCL,MAAM,CAACK,YAAP,GAAsB,IAAtB;;AACjC,QAAI,CAACN,GAAG,CAACO,IAAT,EAAe;AACdP,MAAAA,GAAG,CAACQ,OAAJ,GAAcP,MAAM,CAACQ,IAArB;AACAT,MAAAA,GAAG,CAACU,QAAJ,GAAeT,MAAM,CAACG,IAAP,GACZJ,GAAG,CAACI,IAAJ,CAASO,KAAT,CAAeV,MAAM,CAACG,IAAP,CAAYQ,MAAZ,GAAqB,CAApC,CADY,GAEZZ,GAAG,CAACI,IAFP;AAGA;AACD;AACD,CAjBM","sourcesContent":["import {byPathLengthDesc} from './prepareSqlCol'\n\nexport const assignJsonParents = columnArr => {\n\tconst parents = columnArr\n\t\t.filter(c => c.type === 'JSON' && c.get)\n\t\t.sort(byPathLengthDesc)\n\tfor (const col of columnArr) {\n\t\t// Will always match, json column has path:''\n\t\tconst parent = parents.find(\n\t\t\tp => !p.path || col.path.startsWith(p.path + '.')\n\t\t)\n\t\tif (parent.alwaysObject == null) parent.alwaysObject = true\n\t\tif (!col.real) {\n\t\t\tcol.jsonCol = parent.name\n\t\t\tcol.jsonPath = parent.path\n\t\t\t\t? col.path.slice(parent.path.length + 1)\n\t\t\t\t: col.path\n\t\t}\n\t}\n}\n"],"file":"assignJsonParents.js"}